//// ------------------------------------------------------------------------------
// AUTOGENERATED BY CreateCryptoProtocol.py
// GENERATED ON: 2025-Sep-24 11:12:19
// VERSION: 1.0.0
// DO NOT MODIFY
// ------------------------------------------------------------------------------
#ifndef HMAC_LIB_
#define HMAC_LIB_

#include <Uefi.h>
#include <Library\SharedCryptoDefinitions.h>

// =============================================================================
// Library for Hmac
// =============================================================================

/**
  Creates a new HMAC context.

  @return  Pointer to the new HMAC context.

  @since 1.0.0
  @ingroup HMAC
**/
VOID *
EFIAPI
HmacSha256New (
  VOID
);

/**
  Frees an HMAC context.

  @param[in]  HmacCtx  Pointer to the HMAC context to be freed.

  @since 1.0.0
  @ingroup HMAC
**/
VOID
EFIAPI
HmacSha256Free (
  VOID  *HmacCtx
);

/**
  Sets the key for an HMAC context.

  @param[in]  HmacContext  Pointer to the HMAC context.
  @param[in]  Key          Pointer to the key.
  @param[in]  KeySize      Size of the key in bytes.

  @retval TRUE   Key was set successfully.
  @retval FALSE  Failed to set the key.

  @since 1.0.0
  @ingroup HMAC
**/
BOOLEAN
EFIAPI
HmacSha256SetKey (
  VOID         *HmacContext,
  CONST UINT8  *Key,
  UINTN        KeySize
);

/**
  Duplicates an HMAC context.

  @param[in]  HmacContext     Pointer to the source HMAC context.
  @param[out] NewHmacContext  Pointer to the new HMAC context.

  @retval TRUE   Context was duplicated successfully.
  @retval FALSE  Failed to duplicate the context.

  @since 1.0.0
  @ingroup HMAC
**/
BOOLEAN
EFIAPI
HmacSha256Duplicate (
  CONST VOID  *HmacContext,
  VOID        *NewHmacContext
);

/**
  Updates the HMAC with data.

  @param[in]  HmacContext  Pointer to the HMAC context.
  @param[in]  Data         Pointer to the data.
  @param[in]  DataSize     Size of the data in bytes.

  @retval TRUE   Data was updated successfully.
  @retval FALSE  Failed to update the data.

  @since 1.0.0
  @ingroup HMAC
**/
BOOLEAN
EFIAPI
HmacSha256Update (
  VOID        *HmacContext,
  CONST VOID  *Data,
  UINTN       DataSize
);

/**
  Finalizes the HMAC and produces the HMAC value.

  @param[in]  HmacContext  Pointer to the HMAC context.
  @param[out] HmacValue    Pointer to the buffer that receives the HMAC value.

  @retval TRUE   HMAC value was produced successfully.
  @retval FALSE  Failed to produce the HMAC value.

  @since 1.0.0
  @ingroup HMAC
**/
BOOLEAN
EFIAPI
HmacSha256Final (
  VOID   *HmacContext,
  UINT8  *HmacValue
);

/**
  Performs the entire HMAC operation in one step.

  @param[in]  Data       Pointer to the data.
  @param[in]  DataSize   Size of the data in bytes.
  @param[in]  Key        Pointer to the key.
  @param[in]  KeySize    Size of the key in bytes.
  @param[out] HmacValue  Pointer to the buffer that receives the HMAC value.

  @retval TRUE   HMAC operation was performed successfully.
  @retval FALSE  Failed to perform the HMAC operation.

  @since 1.0.0
  @ingroup HMAC
**/
BOOLEAN
EFIAPI
HmacSha256All (
  CONST VOID   *Data,
  UINTN        DataSize,
  CONST UINT8  *Key,
  UINTN        KeySize,
  UINT8        *HmacValue
);

/**
  Creates a new HMAC context.

  @return  Pointer to the new HMAC context.

  @since 1.0.0
  @ingroup HMAC
**/
VOID *
EFIAPI
HmacSha384New (
  VOID
);

/**
  Frees an HMAC context.

  @param[in]  HmacCtx  Pointer to the HMAC context to be freed.

  @since 1.0.0
  @ingroup HMAC
**/
VOID
EFIAPI
HmacSha384Free (
  VOID  *HmacCtx
);

/**
  Sets the key for an HMAC context.

  @param[in]  HmacContext  Pointer to the HMAC context.
  @param[in]  Key          Pointer to the key.
  @param[in]  KeySize      Size of the key in bytes.

  @retval TRUE   Key was set successfully.
  @retval FALSE  Failed to set the key.

  @since 1.0.0
  @ingroup HMAC
**/
BOOLEAN
EFIAPI
HmacSha384SetKey (
  VOID         *HmacContext,
  CONST UINT8  *Key,
  UINTN        KeySize
);

/**
  Duplicates an HMAC context.

  @param[in]  HmacContext     Pointer to the source HMAC context.
  @param[out] NewHmacContext  Pointer to the new HMAC context.

  @retval TRUE   Context was duplicated successfully.
  @retval FALSE  Failed to duplicate the context.

  @since 1.0.0
  @ingroup HMAC
**/
BOOLEAN
EFIAPI
HmacSha384Duplicate (
  CONST VOID  *HmacContext,
  VOID        *NewHmacContext
);

/**
  Updates the HMAC with data.

  @param[in]  HmacContext  Pointer to the HMAC context.
  @param[in]  Data         Pointer to the data.
  @param[in]  DataSize     Size of the data in bytes.

  @retval TRUE   Data was updated successfully.
  @retval FALSE  Failed to update the data.

  @since 1.0.0
  @ingroup HMAC
**/
BOOLEAN
EFIAPI
HmacSha384Update (
  VOID        *HmacContext,
  CONST VOID  *Data,
  UINTN       DataSize
);

/**
  Finalizes the HMAC and produces the HMAC value.

  @param[in]  HmacContext  Pointer to the HMAC context.
  @param[out] HmacValue    Pointer to the buffer that receives the HMAC value.

  @retval TRUE   HMAC value was produced successfully.
  @retval FALSE  Failed to produce the HMAC value.

  @since 1.0.0
  @ingroup HMAC
**/
BOOLEAN
EFIAPI
HmacSha384Final (
  VOID   *HmacContext,
  UINT8  *HmacValue
);

/**
  Performs the entire HMAC operation in one step.

  @param[in]  Data       Pointer to the data.
  @param[in]  DataSize   Size of the data in bytes.
  @param[in]  Key        Pointer to the key.
  @param[in]  KeySize    Size of the key in bytes.
  @param[out] HmacValue  Pointer to the buffer that receives the HMAC value.

  @retval TRUE   HMAC operation was performed successfully.
  @retval FALSE  Failed to perform the HMAC operation.

  @since 1.0.0
  @ingroup HMAC
**/
BOOLEAN
EFIAPI
HmacSha384All (
  CONST VOID   *Data,
  UINTN        DataSize,
  CONST UINT8  *Key,
  UINTN        KeySize,
  UINT8        *HmacValue
);

#endif // HMAC_LIB_
